      --判断二叉树是不是平衡二叉树

--题目:
  输入一棵二叉树的根结点,判断该树是不是平衡二叉树.如果某二叉树中任意结点的左右子树的深度相差不超过1,那么它就是一棵平衡二叉树.
  例如，下图中的二叉树就是一棵平衡二叉树。
           1
          / \
         2   3
        / \   \
       4   5   6
          /
         7
*************************************

--解题思路:
  （1）需要重复遍历节点多次的解法

   有了求二叉树的深度的经验之后再解决这个问题,我们很容易就能想到一个思路:在遍历树的每个结点的时候,调用函数TreeDepth得到它的左右子树的深度.
   如果每个结点的左右子树的深度相差都不超过1,按照定义它就是一棵平衡的二叉树.
   缺点:但我们也要注意到由于一个结点会被重复遍历多次，这种思路的时间效率不高。

   (2）每个节点只需遍历一次的解法

    如果我们用后序遍历的方式遍历二叉树的每一个结点,在遍历到一个结点之前我们就已经遍历了它的左右子树.
    只要在遍历每个结点的时候记录它的深度(某一结点的深度等于它到叶节点的路径的长度),我们就可以一边遍历一边判断每个结点是不是平衡的.

