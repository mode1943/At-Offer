     ---删除在另一个字符串中出现的字符


--题目：
  输入两个字符串,从第一字符串中删除第二个字符串中所有的字符.例如,输入"They are students."和"aiou".
  删除之后的第一个字符串变成"thy r stdnts."

--思路:
  最简单的方法当然是,对于str1中的每个字母,去str2中扫描一遍,如果没有那么就把str1中当前位置之后的所有字母都往前移动一个位置.以此类推,复杂度为O(n*n);

  1.首先我们可以利用哈希的思想,免去在str2中扫描的时间.而是利用str2去初始化一个hash[256]的数组,如果str2中有某个字母,那么这么字母的ascii码对应的数组元素就置为1.
  所以我们在str1中确定当前字母是否在str2中存在的时候，只需要判断hash[*p] == 1与否.

  2.关于删除字符的操作,每次删除一个,而后把后面的元素均左移一位,由于要删除的字符可能有多个,这种方法的时间复杂度为O(n*n).
  我们这里有O(n)的删除方法,我们可以设想,当一个字符需要被删除的时候,我们把它所占的位置让它后面的字符来填补,也就相当于这个字符被删除了.
  
  在具体实现中,我们可以定义两个指针(pFast和pSlow),初始的时候都指向第一字符的起始位置.当pFast指向的字符是需要删除的字符,则pFast直接跳过,指向下一个字符.
  如果pFast指向的字符是不需要删除的字符,那么把pFast指向的字符赋值给pSlow指向的字符,并且pFast和pStart同时向后移动指向下一个字符.
  这样,前面被pFast跳过的字符相当于被删除了.用这种方法,整个删除在O(n)时间内就可以完成.

  //形象一点的表述：

  假如2个要用砖头铺一条从A到B的路(对应str1),从A到B的路上散布着很多砖头,但是,有的是完整的,有的是碎的(对应str2中的元素).

  那么安排2个人a(slow指针)负责砌砖,b(fast指针)负责提供砖头.所以想铺一条由完整的砖头组成的路,b从A到B走,遇到碎砖就跳过去,遇到整砖,就传递给负责铺路的.
  直到b已经走到B,表示路上的整砖已经用完了.此时a也把所有的完整的砖头用来铺路了.
